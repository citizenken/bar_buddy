#!/bin/bash

set -e

main () {
    schema="${1}"
    schema_dir="./schemas"
    mode="update"
    env="${NODE_ENV}"
    name="${DB_NAME}"
    password="${DB_PASS}"
    host="${DB_HOST}"
    user="${DB_USER}"
    port=":${DB_PORT}"

    while getopts ":c:C" opt; do
      case $opt in
        C)
          mode="current"
          ;;
        c)
          mode="create"
          schema="${OPTARG}"
          ;;
        *)
          echo "Invalid option: -$OPTARG" >&2
          exit
          ;;
      esac
    done

    check_variables

    case "$mode" in
        current )
            get_current_schema
            ;;
        create )
            create_schema
            ;;
        update )
            update_schema
            ;;
    esac
}

check_variables () {
    if [[ "${env}" == "production" ]]; then
        read -p "Env is currently production. OK to update schema?(y/n):" UPDATE
        if [[ "${UPDATE}" == "n" ]]; then
            exit
        fi
    fi

    schemas=$(find "${schema_dir}" -type f -name "*.sql")
}

get_current_schema () {
    query="SELECT * FROM current_schema;"
    if [[ "${NODE_ENV}" == "prod" ]]; then
        mysql --database="${name}" --password="${password}" --host="${host}${port}" --user="${user}" -e "${query}"
    else
    	mysql --database="${name}" -e "${query}"
    fi
    echo "Getting current schema"
}

create_schema () {
    mkdir -p schemas
    if [[ "${NODE_ENV}" == "prod" ]]; then
        mysql --database="${name}" --password="${password}" --host="${host}${port}" --user="${user}" \
	 > schemas/$(date +%s)_"${schema}".sql
    else
	mysqldump "${name}" --no-data \
	 > schemas/$(date +%s)_"${schema}".sql
    fi
    echo "Creating new schema"
}

update_schema () {
    if [[ -z "${schema}" ]]; then
        schema=$(echo "${schemas}" | sort -r | head -n 1)
	execute_update
    elif [[ ! -e "${schema}" ]]; then
        echo "Selected schema is not valid"
        echo "Please choose one of the following schemas:"
        echo "${schemas}"
        exit
    else
	 execute_update
    fi
}

execute_update () {
    schema_name="${schema##*[a-z]*/}"
    schema_name="${schema_name%%.*}"

    queries="CREATE TABLE IF NOT EXISTS current_schema (ID int NOT NULL, schema_name VARCHAR(50) NOT NULL, executed TIMESTAMP, PRIMARY KEY (ID));"
    queries+="REPLACE INTO current_schema (ID, schema_name) VALUES(1, '${schema_name}');"

    if [[ "${NODE_ENV}" == "prod" ]]; then
        mysql --database="${name}" --password="${password}" --host="${host}${port}" --user="${user}" -e "${queries}"
        echo "Updating current schema table"
        mysql --database="${name}"  --password="${password}" --host="${host}${port}" --user="${user}" < "${schema}"
        echo "Successfully updated DB to ${schema_name}"
    else
        mysql --database="${name}" -e "${queries}"
        echo "Updating current schema table"
        mysql --database="${name}" < "${schema}"
        echo "Successfully updated DB to ${schema_name}"
    fi
}


main "${@}"
